apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: backend-pipeline
spec:
  workspaces:
    - name: shared
    - name: production-repository
  params:
    - name: app-name
      type: string
      description: Application name
    - name: source-repo
      type: string
      description: Source code repository
    - name: sha
      type: string
      default: ''
      description: Precise SHA of the commit to build
    - name: image-repo
      type: string
      description: Docker image repository
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared
      params:
        - name: url
          value: $(params.source-repo)
    - name: run-tests
      runAfter:
        - fetch-repository
      taskRef:
        name: npm-test
      workspaces:
        - name: source
          workspace: shared
    - name: buildah
      runAfter:
        - run-tests
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: $(params.image-repo):$(tasks.fetch-repository.results.commit)
      workspaces:
        - name: source
          workspace: shared
    - name: create-configuration
      runAfter:
        - buildah
      taskRef:
        name: create-configuration
      params:
        - name: app-name
          value: $(params.app-name)
        - name: source-repo
          value: $(params.source-repo)
        - name: commit
          value: $(tasks.fetch-repository.results.commit)
        - name: image-repo
          value: $(params.image-repo)
        - name: runtime
          value: js
      workspaces:
        - name: source
          workspace: shared
    - name: deploy
      params:
        - name: app-namespace
          value: $(context.pipelineRun.namespace)
        - name: manifest
          value: $(tasks.create-configuration.results.manifest)
      runAfter:
        - create-configuration
      taskRef:
        name: deploy
      workspaces:
        - name: source
          workspace: shared
    # - name: save-configuration
    #   params:
    #     - name: manifest
    #       value: $(tasks.create-configuration.results.manifest)
    #     - name: app-name
    #       value: $(params.app-name)
    #     - name: sha
    #       value: $(tasks.fetch-repository.results.commit)
    #   runAfter:
    #     - deploy
    #   taskRef:
    #     name: save-configuration
    #   workspaces:
    #     - name: source
    #       workspace: shared
    #     - name: target
    #       workspace: production-repository
